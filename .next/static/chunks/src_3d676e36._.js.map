{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/39340/Desktop/Universita/Tesi/DAppCert/verifica-certificati/src/lib/supabaseClient.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = 'https://rygyqxalcvxrekpfkqga.supabase.co';  \r\nconst supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ5Z3lxeGFsY3Z4cmVrcGZrcWdhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA0MzM5NjcsImV4cCI6MjA2NjAwOTk2N30.lo2ydzPjibp2nl3W_hnhQNP4od_jprdw4RDVHyXKDJ0';        \r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc;AACpB,MAAM,kBAAkB;AAEjB,MAAM,WAAW,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/39340/Desktop/Universita/Tesi/DAppCert/verifica-certificati/src/app/actions/certificateActions.ts"],"sourcesContent":["'use server';\r\n\r\nimport { supabase } from '@/lib/supabaseClient';\r\n\r\n// ‚úÖ Recupera certificati emessi da un ente\r\nexport async function getCertificatesByEntity(entityId: string) {\r\n  if (!entityId) throw new Error('ID ente mancante');\r\n\r\n  const { data, error } = await supabase\r\n    .from('certificates')\r\n    .select(`\r\n      id,\r\n      title,\r\n      description,\r\n      issued_date,\r\n      blockchain_tx,\r\n      users:student_id (\r\n        email,\r\n        nome,\r\n        cognome\r\n      )\r\n    `)\r\n    .eq('entity_id', entityId)\r\n    .order('issued_date', { ascending: false });\r\n\r\n  if (error) {\r\n    throw new Error(error.message);\r\n  }\r\n\r\n  return data.map((cert) => {\r\n    const student = Array.isArray(cert.users) ? cert.users[0] : cert.users;\r\n    return {\r\n      id: cert.id,\r\n      title: cert.title,\r\n      description: cert.description,\r\n      issued_date: cert.issued_date,\r\n      blockchain_tx: cert.blockchain_tx,\r\n      student_email: student?.email ?? 'N/A',\r\n      student_name: student ? `${student.nome} ${student.cognome}` : 'N/A',\r\n    };\r\n  });\r\n}\r\n\r\n// ‚úÖ Recupera certificati di uno studente\r\nexport async function getCertificatesByStudent(studentId: string) {\r\n  if (!studentId) throw new Error('ID studente mancante');\r\n\r\n  const { data, error } = await supabase\r\n    .from('certificates')\r\n    .select(`\r\n      id,\r\n      title,\r\n      description,\r\n      issued_date,\r\n      blockchain_tx,\r\n      entities:entity_id (\r\n        nome_ente,\r\n        email\r\n      )\r\n    `)\r\n    .eq('student_id', studentId)\r\n    .order('issued_date', { ascending: false });\r\n\r\n  if (error) {\r\n    throw new Error(error.message);\r\n  }\r\n\r\n  return data.map((cert) => {\r\n    const entity = Array.isArray(cert.entities) ? cert.entities[0] : cert.entities;\r\n    return {\r\n      id: cert.id,\r\n      title: cert.title,\r\n      description: cert.description,\r\n      issued_date: cert.issued_date,\r\n      blockchain_tx: cert.blockchain_tx,\r\n      entity_name: entity?.nome_ente ?? 'N/A',\r\n      entity_email: entity?.email ?? 'N/A',\r\n    };\r\n  });\r\n}\r\n\r\n// ‚úÖ Elimina un certificato (solo ente proprietario)\r\nexport async function deleteCertificate(id: string, entityId: string) {\r\n  if (!id || !entityId) throw new Error('ID certificato o ente mancante');\r\n\r\n  const { error } = await supabase\r\n    .from('certificates')\r\n    .delete()\r\n    .eq('id', id)\r\n    .eq('entity_id', entityId);\r\n\r\n  if (error) {\r\n    throw new Error(error.message);\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;IA4CsB,2BAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/39340/Desktop/Universita/Tesi/DAppCert/verifica-certificati/src/app/dashboard-student/components/StudentCertificateList.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState, useMemo } from 'react';\r\nimport { getCertificatesByStudent } from '@/app/actions/certificateActions';\r\nimport { Clipboard } from 'lucide-react';\r\n\r\ntype Certificate = {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  issued_date: string;\r\n  blockchain_tx: string;\r\n  entity_name: string;\r\n};\r\n\r\ntype Props = {\r\n  studentId: string;\r\n};\r\n\r\nexport default function StudentCertificateList({ studentId }: Props) {\r\n  const [certificates, setCertificates] = useState<Certificate[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [search, setSearch] = useState<string>('');\r\n  const [page, setPage] = useState<number>(1);\r\n  const pageSize = 10;\r\n\r\n  useEffect(() => {\r\n    const fetchCertificates = async () => {\r\n      try {\r\n        const data = await getCertificatesByStudent(studentId);\r\n        setCertificates(data);\r\n      } catch {\r\n        setError('Errore durante il recupero dei certificati');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (studentId) fetchCertificates();\r\n  }, [studentId]);\r\n\r\n  // üîç Filtraggio in tempo reale\r\n  const filteredCertificates = useMemo(() => {\r\n    return certificates.filter(\r\n      (cert) =>\r\n        cert.title.toLowerCase().includes(search.toLowerCase()) ||\r\n        cert.description?.toLowerCase().includes(search.toLowerCase())\r\n    );\r\n  }, [certificates, search]);\r\n\r\n  // üìÑ Paginazione\r\n  const totalPages = Math.ceil(filteredCertificates.length / pageSize);\r\n  const paginatedCertificates = filteredCertificates.slice(\r\n    (page - 1) * pageSize,\r\n    page * pageSize\r\n  );\r\n\r\n  const handleCopy = (tx: string) => {\r\n    navigator.clipboard.writeText(`https://sepolia.etherscan.io/tx/${tx}`);\r\n    alert('üîó Link copiato negli appunti!');\r\n  };\r\n\r\n  if (loading) return <p className=\"text-gray-600\">Caricamento certificati...</p>;\r\n  if (error) return <p className=\"text-red-500\">{error}</p>;\r\n\r\n  return (\r\n    <section className=\"mt-8\">\r\n      <div className=\"flex items-center gap-2 mb-2\">\r\n        <span className=\"text-2xl\">üìú</span>\r\n        <h2 className=\"text-2xl font-bold text-indigo-800\">\r\n          Di seguito la lista dei tuoi certificati\r\n        </h2>\r\n      </div>\r\n      <p className=\"text-sm text-gray-600 mb-4\">\r\n        Copia il link per condividere il codice del documento. Chi lo ricever√† potr√† verificarne\r\n        l‚Äôautenticit√†.\r\n      </p>\r\n\r\n      {/* üîç Search box */}\r\n      <input\r\n        type=\"text\"\r\n        value={search}\r\n        onChange={(e) => {\r\n          setSearch(e.target.value);\r\n          setPage(1); // reset alla prima pagina durante la ricerca\r\n        }}\r\n        placeholder=\"üîç Cerca per titolo o descrizione...\"\r\n        className=\"w-full p-2 mb-4 border rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n      />\r\n\r\n      {paginatedCertificates.length === 0 ? (\r\n        <p className=\"text-gray-500\">Nessun certificato trovato.</p>\r\n      ) : (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          {paginatedCertificates.map((cert) => (\r\n            <div key={cert.id} className=\"bg-white p-4 rounded-xl shadow-md border\">\r\n              <h3 className=\"text-lg font-bold text-indigo-800\">{cert.title}</h3>\r\n              <p className=\"text-sm text-gray-600\">{cert.description}</p>\r\n              <p className=\"text-sm mt-2\">\r\n                <strong>Emesso da:</strong> {cert.entity_name}\r\n              </p>\r\n              <p className=\"text-sm\">\r\n                <strong>Data:</strong> {new Date(cert.issued_date).toLocaleDateString()}\r\n              </p>\r\n              <div className=\"flex items-center gap-2 mt-2\">\r\n                <a\r\n                  href={`https://sepolia.etherscan.io/tx/${cert.blockchain_tx}`}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"text-sm text-blue-600 underline\"\r\n                >\r\n                  Visualizza transazione\r\n                </a>\r\n                <button\r\n                  onClick={() => handleCopy(cert.blockchain_tx)}\r\n                  className=\"p-1 rounded hover:bg-gray-200\"\r\n                  title=\"Copia link\"\r\n                >\r\n                  <Clipboard size={16} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* üìÑ Paginazione */}\r\n      {totalPages > 1 && (\r\n        <div className=\"flex justify-center items-center gap-4 mt-6\">\r\n          <button\r\n            onClick={() => setPage((p) => Math.max(p - 1, 1))}\r\n            disabled={page === 1}\r\n            className=\"px-3 py-1 bg-gray-200 rounded disabled:opacity-50\"\r\n          >\r\n            ‚óÄ Precedente\r\n          </button>\r\n          <span>\r\n            Pagina {page} di {totalPages}\r\n          </span>\r\n          <button\r\n            onClick={() => setPage((p) => Math.min(p + 1, totalPages))}\r\n            disabled={page === totalPages}\r\n            className=\"px-3 py-1 bg-gray-200 rounded disabled:opacity-50\"\r\n          >\r\n            Successiva ‚ñ∂\r\n          </button>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAmBe,SAAS,uBAAuB,EAAE,SAAS,EAAS;;IACjE,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB,EAAE;IAClE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAChD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IAC7C,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACzC,MAAM,WAAW;IAEjB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;4CAAE;YACR,MAAM;sEAAoB;oBACxB,IAAI;wBACF,MAAM,OAAO,MAAM,CAAA,GAAA,gKAAA,CAAA,2BAAwB,AAAD,EAAE;wBAC5C,gBAAgB;oBAClB,EAAE,OAAM;wBACN,SAAS;oBACX,SAAU;wBACR,WAAW;oBACb;gBACF;;YAEA,IAAI,WAAW;QACjB;2CAAG;QAAC;KAAU;IAEd,+BAA+B;IAC/B,MAAM,uBAAuB,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;gEAAE;YACnC,OAAO,aAAa,MAAM;wEACxB,CAAC,OACC,KAAK,KAAK,CAAC,WAAW,GAAG,QAAQ,CAAC,OAAO,WAAW,OACpD,KAAK,WAAW,EAAE,cAAc,SAAS,OAAO,WAAW;;QAEjE;+DAAG;QAAC;QAAc;KAAO;IAEzB,iBAAiB;IACjB,MAAM,aAAa,KAAK,IAAI,CAAC,qBAAqB,MAAM,GAAG;IAC3D,MAAM,wBAAwB,qBAAqB,KAAK,CACtD,CAAC,OAAO,CAAC,IAAI,UACb,OAAO;IAGT,MAAM,aAAa,CAAC;QAClB,UAAU,SAAS,CAAC,SAAS,CAAC,CAAC,gCAAgC,EAAE,IAAI;QACrE,MAAM;IACR;IAEA,IAAI,SAAS,qBAAO,6LAAC;QAAE,WAAU;kBAAgB;;;;;;IACjD,IAAI,OAAO,qBAAO,6LAAC;QAAE,WAAU;kBAAgB;;;;;;IAE/C,qBACE,6LAAC;QAAQ,WAAU;;0BACjB,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAK,WAAU;kCAAW;;;;;;kCAC3B,6LAAC;wBAAG,WAAU;kCAAqC;;;;;;;;;;;;0BAIrD,6LAAC;gBAAE,WAAU;0BAA6B;;;;;;0BAM1C,6LAAC;gBACC,MAAK;gBACL,OAAO;gBACP,UAAU,CAAC;oBACT,UAAU,EAAE,MAAM,CAAC,KAAK;oBACxB,QAAQ,IAAI,6CAA6C;gBAC3D;gBACA,aAAY;gBACZ,WAAU;;;;;;YAGX,sBAAsB,MAAM,KAAK,kBAChC,6LAAC;gBAAE,WAAU;0BAAgB;;;;;qCAE7B,6LAAC;gBAAI,WAAU;0BACZ,sBAAsB,GAAG,CAAC,CAAC,qBAC1B,6LAAC;wBAAkB,WAAU;;0CAC3B,6LAAC;gCAAG,WAAU;0CAAqC,KAAK,KAAK;;;;;;0CAC7D,6LAAC;gCAAE,WAAU;0CAAyB,KAAK,WAAW;;;;;;0CACtD,6LAAC;gCAAE,WAAU;;kDACX,6LAAC;kDAAO;;;;;;oCAAmB;oCAAE,KAAK,WAAW;;;;;;;0CAE/C,6LAAC;gCAAE,WAAU;;kDACX,6LAAC;kDAAO;;;;;;oCAAc;oCAAE,IAAI,KAAK,KAAK,WAAW,EAAE,kBAAkB;;;;;;;0CAEvE,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCACC,MAAM,CAAC,gCAAgC,EAAE,KAAK,aAAa,EAAE;wCAC7D,QAAO;wCACP,KAAI;wCACJ,WAAU;kDACX;;;;;;kDAGD,6LAAC;wCACC,SAAS,IAAM,WAAW,KAAK,aAAa;wCAC5C,WAAU;wCACV,OAAM;kDAEN,cAAA,6LAAC,+MAAA,CAAA,YAAS;4CAAC,MAAM;;;;;;;;;;;;;;;;;;uBAvBb,KAAK,EAAE;;;;;;;;;;YAgCtB,aAAa,mBACZ,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBACC,SAAS,IAAM,QAAQ,CAAC,IAAM,KAAK,GAAG,CAAC,IAAI,GAAG;wBAC9C,UAAU,SAAS;wBACnB,WAAU;kCACX;;;;;;kCAGD,6LAAC;;4BAAK;4BACI;4BAAK;4BAAK;;;;;;;kCAEpB,6LAAC;wBACC,SAAS,IAAM,QAAQ,CAAC,IAAM,KAAK,GAAG,CAAC,IAAI,GAAG;wBAC9C,UAAU,SAAS;wBACnB,WAAU;kCACX;;;;;;;;;;;;;;;;;;AAOX;GApIwB;KAAA","debugId":null}},
    {"offset": {"line": 336, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/39340/Desktop/Universita/Tesi/DAppCert/verifica-certificati/src/app/dashboard-student/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { supabase } from '@/lib/supabaseClient';\r\nimport StudentCertificateList from './components/StudentCertificateList';\r\nimport { useRouter } from 'next/navigation';\r\n\r\nexport default function StudentDashboard() {\r\n  const [studentId, setStudentId] = useState<string | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    const fetchStudent = async () => {\r\n      try {\r\n        setLoading(true);\r\n\r\n        // Recupera email salvata al login\r\n        const email = localStorage.getItem('userEmail');\r\n        if (!email) throw new Error('Nessuna email trovata in sessione');\r\n\r\n        // Recupera ID dello studente\r\n        const { data, error: studentErr } = await supabase\r\n          .from('users')\r\n          .select('id')\r\n          .eq('email', email)\r\n          .single();\r\n\r\n        if (studentErr) throw studentErr;\r\n        if (!data) throw new Error('Studente non trovato');\r\n\r\n        setStudentId(data.id);\r\n      } catch (err: unknown) {\r\n        console.error('Errore fetchStudent:', err);\r\n        setError('Errore nel recupero dello studente');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchStudent();\r\n  }, []);\r\n\r\n  const handleLogout = async () => {\r\n    await supabase.auth.signOut();\r\n    localStorage.removeItem('userEmail'); // üîë pulizia\r\n    router.push('/'); // üîë redirect alla home\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"p-4 text-gray-100\">‚è≥ Caricamento...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"p-4 text-red-200\">‚ùå {error}</div>;\r\n  }\r\n\r\n  if (!studentId) {\r\n    return <div className=\"p-4 text-red-200\">‚ùå Nessuno studente associato a questo account</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-indigo-700 to-indigo-900 py-10 px-6\">\r\n      <div className=\"max-w-4xl mx-auto bg-white p-6 rounded-xl shadow-md\">\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <h1 className=\"text-2xl font-bold text-indigo-700\">Dashboard Studente</h1>\r\n          <button\r\n            onClick={handleLogout}\r\n            className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition\"\r\n          >\r\n            üö™ Logout\r\n          </button>\r\n        </div>\r\n\r\n        {/* Lista certificati legata allo studentId */}\r\n        <StudentCertificateList studentId={studentId} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;;;AALA;;;;;AAOe,SAAS;;IACtB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAC1D,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;sCAAE;YACR,MAAM;2DAAe;oBACnB,IAAI;wBACF,WAAW;wBAEX,kCAAkC;wBAClC,MAAM,QAAQ,aAAa,OAAO,CAAC;wBACnC,IAAI,CAAC,OAAO,MAAM,IAAI,MAAM;wBAE5B,6BAA6B;wBAC7B,MAAM,EAAE,IAAI,EAAE,OAAO,UAAU,EAAE,GAAG,MAAM,+HAAA,CAAA,WAAQ,CAC/C,IAAI,CAAC,SACL,MAAM,CAAC,MACP,EAAE,CAAC,SAAS,OACZ,MAAM;wBAET,IAAI,YAAY,MAAM;wBACtB,IAAI,CAAC,MAAM,MAAM,IAAI,MAAM;wBAE3B,aAAa,KAAK,EAAE;oBACtB,EAAE,OAAO,KAAc;wBACrB,QAAQ,KAAK,CAAC,wBAAwB;wBACtC,SAAS;oBACX,SAAU;wBACR,WAAW;oBACb;gBACF;;YAEA;QACF;qCAAG,EAAE;IAEL,MAAM,eAAe;QACnB,MAAM,+HAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,OAAO;QAC3B,aAAa,UAAU,CAAC,cAAc,aAAa;QACnD,OAAO,IAAI,CAAC,MAAM,wBAAwB;IAC5C;IAEA,IAAI,SAAS;QACX,qBAAO,6LAAC;YAAI,WAAU;sBAAoB;;;;;;IAC5C;IAEA,IAAI,OAAO;QACT,qBAAO,6LAAC;YAAI,WAAU;;gBAAmB;gBAAG;;;;;;;IAC9C;IAEA,IAAI,CAAC,WAAW;QACd,qBAAO,6LAAC;YAAI,WAAU;sBAAmB;;;;;;IAC3C;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCAAqC;;;;;;sCACnD,6LAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;;;;;;;8BAMH,6LAAC,8KAAA,CAAA,UAAsB;oBAAC,WAAW;;;;;;;;;;;;;;;;;AAI3C;GAzEwB;;QAIP,qIAAA,CAAA,YAAS;;;KAJF","debugId":null}}]
}