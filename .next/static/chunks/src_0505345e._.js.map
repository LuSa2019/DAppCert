{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/39340/Desktop/Universit%C3%A0/Tesi/DAppCert/verifica-certificati/src/lib/supabaseClient.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = 'https://rygyqxalcvxrekpfkqga.supabase.co';  \r\nconst supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ5Z3lxeGFsY3Z4cmVrcGZrcWdhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA0MzM5NjcsImV4cCI6MjA2NjAwOTk2N30.lo2ydzPjibp2nl3W_hnhQNP4od_jprdw4RDVHyXKDJ0';        \r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc;AACpB,MAAM,kBAAkB;AAEjB,MAAM,WAAW,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/39340/Desktop/Universit%C3%A0/Tesi/DAppCert/verifica-certificati/src/lib/registerStudent.ts"],"sourcesContent":["import { supabase } from '@/lib/supabaseClient';\r\n\r\ninterface StudentData {\r\n  nome: string;\r\n  cognome: string;\r\n  dataNascita: string;\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport default async function registerStudent(data: StudentData) {\r\n\r\n  // Step 1: registra l'utente con email & password\r\n  const { data: signUpData, error: signUpError } = await supabase.auth.signUp({\r\n    email: data.email,\r\n    password: data.password,\r\n  });\r\n\r\n  if (signUpError) throw signUpError;\r\n\r\n  // Step 2: inserisci dati nella tabella \"students\"\r\n  const { error: insertError } = await supabase\r\n    .from('students')\r\n    .insert({\r\n      user_id: signUpData.user?.id, // id dell'utente creato\r\n      nome: data.nome,\r\n      cognome: data.cognome,\r\n      data_nascita: data.dataNascita,\r\n    });\r\n\r\n  if (insertError) throw insertError;\r\n\r\n  return signUpData;\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAUe,eAAe,gBAAgB,IAAiB;IAE7D,iDAAiD;IACjD,MAAM,EAAE,MAAM,UAAU,EAAE,OAAO,WAAW,EAAE,GAAG,MAAM,+HAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;QAC1E,OAAO,KAAK,KAAK;QACjB,UAAU,KAAK,QAAQ;IACzB;IAEA,IAAI,aAAa,MAAM;IAEvB,kDAAkD;IAClD,MAAM,EAAE,OAAO,WAAW,EAAE,GAAG,MAAM,+HAAA,CAAA,WAAQ,CAC1C,IAAI,CAAC,YACL,MAAM,CAAC;QACN,SAAS,WAAW,IAAI,EAAE;QAC1B,MAAM,KAAK,IAAI;QACf,SAAS,KAAK,OAAO;QACrB,cAAc,KAAK,WAAW;IAChC;IAEF,IAAI,aAAa,MAAM;IAEvB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/39340/Desktop/Universit%C3%A0/Tesi/DAppCert/verifica-certificati/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from \"react\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport { GraduationCap, Building2, Search } from \"lucide-react\";\nimport registerStudent from \"@/lib/registerStudent\";\nimport registerEntity from \"@/lib/registerEntity\";\n\nexport default function Home() {\n  const [showRegister, setShowRegister] = useState(false);\n  const [registerAs, setRegisterAs] = useState<'student' | 'entity' | null>(null);\n  const [registerType, setRegisterType] = useState<'classic' | 'wallet' | null>(null);\n\n  // Campi form per studenti\n  const [studentForm, setStudentForm] = useState({\n    nome: '',\n    cognome: '',\n    dataNascita: '',\n    email: '',\n    password: '',\n  });\n\n  // Campi form per enti\n  const [entityForm, setEntityForm] = useState({\n    nomeEnte: '',\n    email: '',\n    password: '',\n  });\n\n  // Handle submit per studenti\n  const handleStudentRegister = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      await registerStudent({\n        nome: studentForm.nome,\n        cognome: studentForm.cognome,\n        dataNascita: studentForm.dataNascita,\n        email: studentForm.email,\n        password: studentForm.password,\n      });\n      alert('Registrazione studente completata!');\n      setShowRegister(false);\n      setRegisterType(null);\n      setRegisterAs(null);\n    } catch (error) {\n      console.error('Errore registrazione studente:', error);\n      alert('Errore nella registrazione.');\n    }\n  };\n\n  // Handle submit per enti\n  const handleEntityRegister = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      await registerEntity({\n        nome: entityForm.nomeEnte,\n        email: entityForm.email,\n        password: entityForm.password,\n      });\n      alert('Registrazione ente completata!');\n      setShowRegister(false);\n      setRegisterType(null);\n      setRegisterAs(null);\n    } catch (error) {\n      console.error('Errore registrazione ente:', error);\n      alert('Errore nella registrazione.');\n    }\n  };\n\n  return (\n    <main className=\"min-h-screen bg-gradient-to-br from-indigo-900 to-blue-700 text-white flex flex-col\">\n      {/* Header */}\n      <header className=\"p-6 text-center text-5xl md:text-6xl font-extrabold tracking-tight\">\n        CertifyChain\n      </header>\n\n      {/* Hero */}\n      <section className=\"flex flex-col md:flex-row justify-center items-center gap-8 px-6 py-12\">\n        <div className=\"max-w-xl text-center\">\n          <h1 className=\"text-4xl md:text-5xl font-extrabold mb-6 leading-tight drop-shadow-lg\">\n            La tua identità accademica sulla Blockchain\n          </h1>\n          <p className=\"text-lg text-gray-200 mb-4\">\n            Registrazione e verifica dei certificati in modo trasparente e sicuro.\n          </p>\n        </div>\n        <Image\n          src=\"https://www.netgroup.it/wp-content/uploads/2023/04/Blockchain-Technology_2.jpg\"\n          alt=\"Blockchain\"\n          width={600}\n          height={400}\n          className=\"rounded-xl shadow-2xl object-cover\"\n          priority\n        />\n      </section>\n\n      {/* Sezioni */}\n      <section className=\"grid grid-cols-1 md:grid-cols-3 gap-6 px-8 py-12 text-center\">\n        {/* Enti */}\n        <div className=\"bg-white text-gray-900 rounded-2xl p-6 shadow-xl\">\n          <div className=\"flex items-center justify-center gap-2 mb-3 text-indigo-700\">\n            <Building2 size={32} />\n            <h2 className=\"text-3xl font-bold\">Enti</h2>\n          </div>\n          <p className=\"mb-6\">Crea, gestisci e assegna certificati accademici.</p>\n          <div className=\"flex flex-col gap-3\">\n            <button\n              onClick={() => { setShowRegister(true); setRegisterAs('entity'); setRegisterType(null); }}\n              className=\"bg-indigo-700 text-white py-2 px-4 rounded-lg hover:bg-indigo-800\"\n            >\n              Registrati\n            </button>\n            <Link href=\"\" className=\"border border-indigo-700 text-indigo-700 py-2 px-4 rounded-lg hover:bg-indigo-100\">\n              Login\n            </Link>\n          </div>\n        </div>\n\n        {/* Studenti */}\n        <div className=\"bg-white text-gray-900 rounded-2xl p-6 shadow-xl\">\n          <div className=\"flex items-center justify-center gap-2 mb-3 text-indigo-700\">\n            <GraduationCap size={32} />\n            <h2 className=\"text-3xl font-bold\">Studenti</h2>\n          </div>\n          <p className=\"mb-6\">Consulta e gestisci i tuoi certificati accademici.</p>\n          <div className=\"flex flex-col gap-3\">\n            <button\n              onClick={() => { setShowRegister(true); setRegisterAs('student'); setRegisterType(null); }}\n              className=\"bg-indigo-700 text-white py-2 px-4 rounded-lg hover:bg-indigo-800\"\n            >\n              Registrati\n            </button>\n            <Link href=\"\" className=\"border border-indigo-700 text-indigo-700 py-2 px-4 rounded-lg hover:bg-indigo-100\">\n              Login\n            </Link>\n          </div>\n        </div>\n\n        {/* Verifica */}\n        <div className=\"bg-white text-gray-900 rounded-2xl p-6 shadow-xl\">\n          <div className=\"flex items-center justify-center gap-2 mb-3 text-green-600\">\n            <Search size={32} />\n            <h2 className=\"text-3xl font-bold\">Verifica</h2>\n          </div>\n          <p className=\"mb-6\">Inserisci l&apos;ID del certificato per verificarne l&apos;autenticità.</p>\n          <div>\n            <Link href=\"/verify\" className=\"bg-green-600 text-white py-2 px-4 rounded-lg hover:bg-green-700\">\n              Verifica Certificato\n            </Link>\n          </div>\n        </div>\n      </section>\n\n      {/* Modulo di registrazione */}\n      {showRegister && (\n        <section className=\"bg-white text-gray-900 p-6 rounded-xl shadow-xl mx-auto mb-12 w-full max-w-2xl\">\n          <h2 className=\"text-2xl font-bold mb-4\">Seleziona tipo di registrazione</h2>\n          {!registerType && (\n            <div className=\"flex flex-col gap-3\">\n              <button\n                onClick={() => setRegisterType('classic')}\n                className=\"bg-indigo-700 text-white py-2 px-4 rounded-lg hover:bg-indigo-800\"\n              >\n                Registrati con Email\n              </button>\n              <button\n                onClick={() => setRegisterType('wallet')}\n                className=\"bg-green-600 text-white py-2 px-4 rounded-lg hover:bg-green-700\"\n              >\n                Registrati con Wallet\n              </button>\n            </div>\n          )}\n\n          {registerType === 'classic' && registerAs === 'student' && (\n            <form onSubmit={handleStudentRegister} className=\"flex flex-col gap-3 mt-4\">\n              <input\n                type=\"text\"\n                placeholder=\"Nome\"\n                value={studentForm.nome}\n                onChange={e => setStudentForm({ ...studentForm, nome: e.target.value })}\n                className=\"border p-2 rounded\"\n              />\n              <input\n                type=\"text\"\n                placeholder=\"Cognome\"\n                value={studentForm.cognome}\n                onChange={e => setStudentForm({ ...studentForm, cognome: e.target.value })}\n                className=\"border p-2 rounded\"\n              />\n              <input\n                type=\"date\"\n                value={studentForm.dataNascita}\n                onChange={e => setStudentForm({ ...studentForm, dataNascita: e.target.value })}\n                className=\"border p-2 rounded\"\n              />\n              <input\n                type=\"email\"\n                placeholder=\"Email\"\n                value={studentForm.email}\n                onChange={e => setStudentForm({ ...studentForm, email: e.target.value })}\n                className=\"border p-2 rounded\"\n              />\n              <input\n                type=\"password\"\n                placeholder=\"Password\"\n                value={studentForm.password}\n                onChange={e => setStudentForm({ ...studentForm, password: e.target.value })}\n                className=\"border p-2 rounded\"\n              />\n              <button type=\"submit\" className=\"bg-indigo-700 text-white py-2 px-4 rounded-lg hover:bg-indigo-800\">\n                Registrati\n              </button>\n            </form>\n          )}\n\n          {registerType === 'classic' && registerAs === 'entity' && (\n            <form onSubmit={handleEntityRegister} className=\"flex flex-col gap-3 mt-4\">\n              <input\n                type=\"text\"\n                placeholder=\"Nome Ente\"\n                value={entityForm.nomeEnte}\n                onChange={e => setEntityForm({ ...entityForm, nomeEnte: e.target.value })}\n                className=\"border p-2 rounded\"\n              />\n              <input\n                type=\"email\"\n                placeholder=\"Email istituzionale\"\n                value={entityForm.email}\n                onChange={e => setEntityForm({ ...entityForm, email: e.target.value })}\n                className=\"border p-2 rounded\"\n              />\n              <input\n                type=\"password\"\n                placeholder=\"Password\"\n                value={entityForm.password}\n                onChange={e => setEntityForm({ ...entityForm, password: e.target.value })}\n                className=\"border p-2 rounded\"\n              />\n              <button type=\"submit\" className=\"bg-indigo-700 text-white py-2 px-4 rounded-lg hover:bg-indigo-800\">\n                Registrati\n              </button>\n            </form>\n          )}\n\n          {registerType === 'wallet' && (\n            <div className=\"mt-4\">\n              <button\n                onClick={() => console.log('Connetti wallet')}\n                className=\"bg-green-600 text-white py-2 px-4 rounded-lg hover:bg-green-700\"\n              >\n                Connetti Wallet\n              </button>\n            </div>\n          )}\n\n          <button\n            onClick={() => { setShowRegister(false); setRegisterType(null); setRegisterAs(null); }}\n            className=\"mt-4 text-sm text-gray-600 underline\"\n          >\n            Annulla\n          </button>\n        </section>\n      )}\n\n      {/* Footer */}\n      <footer className=\"text-center py-4 text-sm text-gray-300 border-t border-gray-600\">\n        © 2025 CertifyChain - Tutti i diritti riservati\n      </footer>\n    </main>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}