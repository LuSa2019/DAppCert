{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/39340/Desktop/Universita/Tesi/DAppCert/verifica-certificati/src/abi/CertificatiABI.ts"],"sourcesContent":["export const CertificatiABI = [\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"hash\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"aggiungiCertificato\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"constructor\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"hash\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"emittente\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"CertificatoAggiunto\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"hash\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"CertificatoRimosso\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"hash\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"rimuoviCertificato\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"certificati\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"hash\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"emittente\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"timestamp\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"owner\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"hash\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"verificaCertificato\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"exists\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"emittente\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"timestamp\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n];"],"names":[],"mappings":";;;AAAO,MAAM,iBAAiB;IAC7B;QACC,UAAU;YACT;gBACC,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACT;SACA;QACD,QAAQ;QACR,WAAW,EAAE;QACb,mBAAmB;QACnB,QAAQ;IACT;IACA;QACC,UAAU,EAAE;QACZ,mBAAmB;QACnB,QAAQ;IACT;IACA;QACC,aAAa;QACb,UAAU;YACT;gBACC,WAAW;gBACX,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACT;YACA;gBACC,WAAW;gBACX,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACT;SACA;QACD,QAAQ;QACR,QAAQ;IACT;IACA;QACC,aAAa;QACb,UAAU;YACT;gBACC,WAAW;gBACX,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACT;SACA;QACD,QAAQ;QACR,QAAQ;IACT;IACA;QACC,UAAU;YACT;gBACC,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACT;SACA;QACD,QAAQ;QACR,WAAW,EAAE;QACb,mBAAmB;QACnB,QAAQ;IACT;IACA;QACC,UAAU;YACT;gBACC,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACT;SACA;QACD,QAAQ;QACR,WAAW;YACV;gBACC,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACT;YACA;gBACC,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACT;YACA;gBACC,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACT;SACA;QACD,mBAAmB;QACnB,QAAQ;IACT;IACA;QACC,UAAU,EAAE;QACZ,QAAQ;QACR,WAAW;YACV;gBACC,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACT;SACA;QACD,mBAAmB;QACnB,QAAQ;IACT;IACA;QACC,UAAU;YACT;gBACC,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACT;SACA;QACD,QAAQ;QACR,WAAW;YACV;gBACC,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACT;YACA;gBACC,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACT;YACA;gBACC,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACT;SACA;QACD,mBAAmB;QACnB,QAAQ;IACT;CACA","debugId":null}},
    {"offset": {"line": 293, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/39340/Desktop/Universita/Tesi/DAppCert/verifica-certificati/src/lib/config.ts"],"sourcesContent":["// lib/config.ts\r\nexport function getConfig() {\r\n  const RPC_URL = process.env.RPC_URL!;\r\n  const WALLET_PRIVATE_KEY = process.env.WALLET_PRIVATE_KEY!;\r\n  const CONTRACT_ADDRESS = process.env.CONTRACT_ADDRESS!;\r\n\r\n  if (!RPC_URL || !WALLET_PRIVATE_KEY || !CONTRACT_ADDRESS) {\r\n    throw new Error(\"‚ö† Variabili di ambiente mancanti!\");\r\n  }\r\n\r\n  return { RPC_URL, WALLET_PRIVATE_KEY, CONTRACT_ADDRESS };\r\n}\r\n"],"names":[],"mappings":"AAAA,gBAAgB;;;;AACT,SAAS;IACd,MAAM,UAAU,QAAQ,GAAG,CAAC,OAAO;IACnC,MAAM,qBAAqB,QAAQ,GAAG,CAAC,kBAAkB;IACzD,MAAM,mBAAmB,QAAQ,GAAG,CAAC,gBAAgB;IAErD,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,kBAAkB;QACxD,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;QAAE;QAAS;QAAoB;IAAiB;AACzD","debugId":null}},
    {"offset": {"line": 316, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/39340/Desktop/Universita/Tesi/DAppCert/verifica-certificati/src/app/api/aggiungi-certificato/route.ts"],"sourcesContent":["// app/api/aggiungi-certificato/route.ts\r\nimport { ethers } from \"ethers\";\r\nimport { NextResponse } from \"next/server\";\r\nimport { CertificatiABI } from \"@/abi/CertificatiABI\";\r\nimport { getConfig } from \"@/lib/config\";\r\n\r\nexport const runtime = \"nodejs\"; // ‚úÖ puoi anche toglierlo se vuoi girare su edge\r\n\r\nexport async function POST(req: Request) {\r\n  try {\r\n    const { hash } = await req.json();\r\n\r\n    if (!hash || typeof hash !== \"string\") {\r\n      return NextResponse.json(\r\n        { error: \"Hash mancante o non valido\" },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const { RPC_URL, WALLET_PRIVATE_KEY, CONTRACT_ADDRESS } = getConfig();\r\n    console.log(\"üëâ RPC_URL:\", RPC_URL);\r\n\r\n    // ‚úÖ ethers v6: provider con fetch nativo\r\n    const provider = new ethers.JsonRpcProvider(RPC_URL, {\r\n      chainId: 11155111,\r\n      name: \"sepolia\",\r\n    });\r\n\r\n    // üîç Test connessione\r\n    const block = await provider.getBlockNumber();\r\n    console.log(\"‚õìÔ∏è Block corrente:\", block);\r\n\r\n    // Wallet (ethers v6 usa \"new Wallet\" allo stesso modo)\r\n    const wallet = new ethers.Wallet(WALLET_PRIVATE_KEY, provider);\r\n    console.log(\"‚úÖ Wallet pronto:\", wallet.address);\r\n\r\n    // Contratto\r\n    const contract = new ethers.Contract(CONTRACT_ADDRESS, CertificatiABI, wallet);\r\n    console.log(\"‚úÖ Contratto connesso:\", contract.target);\r\n\r\n    // Formattazione hash\r\n    const formattedHash = ethers.zeroPadValue(\r\n      hash.startsWith(\"0x\") ? hash : \"0x\" + hash,\r\n      32\r\n    );\r\n\r\n    // Transazione\r\n    const tx = await contract.aggiungiCertificato(formattedHash);\r\n    const receipt = await tx.wait();\r\n\r\n    return NextResponse.json({\r\n      message: \"Certificato aggiunto con successo\",\r\n      txHash: tx.hash,\r\n      blockNumber: receipt.blockNumber,\r\n    });\r\n  } catch (err: any) {\r\n    console.error(\"‚ùå Errore API aggiungi-certificato:\", err);\r\n\r\n    // üëâ Gestione elegante errori di revert ethers v6\r\n    if (err?.revert?.args?.[0]) {\r\n      return NextResponse.json({ error: err.revert.args[0] }, { status: 400 });\r\n    }\r\n\r\n    if (err?.shortMessage) {\r\n      return NextResponse.json({ error: err.shortMessage }, { status: 400 });\r\n    }\r\n\r\n    return NextResponse.json(\r\n      { error: err?.message ?? \"Errore interno\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,wCAAwC;;;;;AACxC;AACA;AACA;AACA;;;;;AAEO,MAAM,UAAU,UAAU,gDAAgD;AAE1E,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,IAAI;QAE/B,IAAI,CAAC,QAAQ,OAAO,SAAS,UAAU;YACrC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA6B,GACtC;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,EAAE,OAAO,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,GAAG,CAAA,GAAA,sHAAA,CAAA,YAAS,AAAD;QAClE,QAAQ,GAAG,CAAC,eAAe;QAE3B,yCAAyC;QACzC,MAAM,WAAW,IAAI,kLAAA,CAAA,SAAM,CAAC,eAAe,CAAC,SAAS;YACnD,SAAS;YACT,MAAM;QACR;QAEA,sBAAsB;QACtB,MAAM,QAAQ,MAAM,SAAS,cAAc;QAC3C,QAAQ,GAAG,CAAC,sBAAsB;QAElC,uDAAuD;QACvD,MAAM,SAAS,IAAI,kLAAA,CAAA,SAAM,CAAC,MAAM,CAAC,oBAAoB;QACrD,QAAQ,GAAG,CAAC,oBAAoB,OAAO,OAAO;QAE9C,YAAY;QACZ,MAAM,WAAW,IAAI,kLAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,kBAAkB,8HAAA,CAAA,iBAAc,EAAE;QACvE,QAAQ,GAAG,CAAC,yBAAyB,SAAS,MAAM;QAEpD,qBAAqB;QACrB,MAAM,gBAAgB,kLAAA,CAAA,SAAM,CAAC,YAAY,CACvC,KAAK,UAAU,CAAC,QAAQ,OAAO,OAAO,MACtC;QAGF,cAAc;QACd,MAAM,KAAK,MAAM,SAAS,mBAAmB,CAAC;QAC9C,MAAM,UAAU,MAAM,GAAG,IAAI;QAE7B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,QAAQ,GAAG,IAAI;YACf,aAAa,QAAQ,WAAW;QAClC;IACF,EAAE,OAAO,KAAU;QACjB,QAAQ,KAAK,CAAC,sCAAsC;QAEpD,kDAAkD;QAClD,IAAI,KAAK,QAAQ,MAAM,CAAC,EAAE,EAAE;YAC1B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE;YAAC,GAAG;gBAAE,QAAQ;YAAI;QACxE;QAEA,IAAI,KAAK,cAAc;YACrB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO,IAAI,YAAY;YAAC,GAAG;gBAAE,QAAQ;YAAI;QACtE;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO,KAAK,WAAW;QAAiB,GAC1C;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}