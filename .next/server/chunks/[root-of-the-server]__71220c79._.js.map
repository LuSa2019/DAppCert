{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/39340/Desktop/Universita/Tesi/DAppCert/verifica-certificati/src/abi/CertificatiABI.ts"],"sourcesContent":["export const CertificatiABI = [\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"hash\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"aggiungiCertificato\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"constructor\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"hash\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"emittente\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"CertificatoAggiunto\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"hash\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"CertificatoRimosso\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"hash\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"rimuoviCertificato\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"certificati\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"hash\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"emittente\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"timestamp\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"owner\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"hash\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"verificaCertificato\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"exists\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"emittente\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"timestamp\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n];"],"names":[],"mappings":";;;AAAO,MAAM,iBAAiB;IAC7B;QACC,UAAU;YACT;gBACC,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACT;SACA;QACD,QAAQ;QACR,WAAW,EAAE;QACb,mBAAmB;QACnB,QAAQ;IACT;IACA;QACC,UAAU,EAAE;QACZ,mBAAmB;QACnB,QAAQ;IACT;IACA;QACC,aAAa;QACb,UAAU;YACT;gBACC,WAAW;gBACX,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACT;YACA;gBACC,WAAW;gBACX,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACT;SACA;QACD,QAAQ;QACR,QAAQ;IACT;IACA;QACC,aAAa;QACb,UAAU;YACT;gBACC,WAAW;gBACX,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACT;SACA;QACD,QAAQ;QACR,QAAQ;IACT;IACA;QACC,UAAU;YACT;gBACC,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACT;SACA;QACD,QAAQ;QACR,WAAW,EAAE;QACb,mBAAmB;QACnB,QAAQ;IACT;IACA;QACC,UAAU;YACT;gBACC,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACT;SACA;QACD,QAAQ;QACR,WAAW;YACV;gBACC,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACT;YACA;gBACC,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACT;YACA;gBACC,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACT;SACA;QACD,mBAAmB;QACnB,QAAQ;IACT;IACA;QACC,UAAU,EAAE;QACZ,QAAQ;QACR,WAAW;YACV;gBACC,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACT;SACA;QACD,mBAAmB;QACnB,QAAQ;IACT;IACA;QACC,UAAU;YACT;gBACC,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACT;SACA;QACD,QAAQ;QACR,WAAW;YACV;gBACC,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACT;YACA;gBACC,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACT;YACA;gBACC,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACT;SACA;QACD,mBAAmB;QACnB,QAAQ;IACT;CACA","debugId":null}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/39340/Desktop/Universita/Tesi/DAppCert/verifica-certificati/src/app/api/aggiungi-certificato/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport { ethers } from \"ethers\";\r\nimport { CertificatiABI } from \"@/abi/CertificatiABI\";\r\n\r\n// Legge le variabili d’ambiente\r\nconst RPC_URL = process.env.RPC_URL!;\r\nconst WALLET_PRIVATE_KEY = process.env.WALLET_PRIVATE_KEY!;\r\nconst CONTRACT_ADDRESS = process.env.CONTRACT_ADDRESS!;\r\n\r\nexport async function POST(req: Request) {\r\n  try {\r\n    const { hash } = await req.json();\r\n\r\n    if (!hash || typeof hash !== \"string\") {\r\n      return NextResponse.json(\r\n        { error: \"Hash mancante o non valido\" },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // 1️⃣ Provider esplicito con network\r\n    const provider = new ethers.providers.JsonRpcProvider(RPC_URL, {\r\n      name: \"sepolia\",\r\n      chainId: 11155111,\r\n    });\r\n\r\n    // 2️⃣ Wallet connesso al provider\r\n    const wallet = new ethers.Wallet(WALLET_PRIVATE_KEY, provider);\r\n\r\n    console.log(\"✅ Wallet pronto:\", wallet.address);\r\n\r\n    // 3️⃣ Contratto connesso\r\n    const contract = new ethers.Contract(CONTRACT_ADDRESS, CertificatiABI, wallet);\r\n    console.log(\"✅ Contratto connesso:\", contract.address);\r\n\r\n    // 4️⃣ Formatta hash come bytes32\r\n    const formattedHash = ethers.utils.hexZeroPad(\r\n      hash.startsWith(\"0x\") ? hash : \"0x\" + hash,\r\n      32\r\n    );\r\n\r\n    // 5️⃣ Invia transazione\r\n    const tx = await contract.aggiungiCertificato(formattedHash);\r\n    console.log(\"⏳ Tx inviata:\", tx.hash);\r\n\r\n    const receipt = await tx.wait();\r\n    console.log(\"✅ Tx confermata:\", receipt.transactionHash);\r\n\r\n    return NextResponse.json({\r\n      txHash: receipt.transactionHash,\r\n      blockNumber: receipt.blockNumber,\r\n    });\r\n  } catch (err: any) {\r\n    console.error(\"❌ Errore API aggiungi-certificato:\", err);\r\n    return NextResponse.json(\r\n      { error: err?.message ?? \"Errore interno\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEA,gCAAgC;AAChC,MAAM,UAAU,QAAQ,GAAG,CAAC,OAAO;AACnC,MAAM,qBAAqB,QAAQ,GAAG,CAAC,kBAAkB;AACzD,MAAM,mBAAmB,QAAQ,GAAG,CAAC,gBAAgB;AAE9C,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,IAAI;QAE/B,IAAI,CAAC,QAAQ,OAAO,SAAS,UAAU;YACrC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA6B,GACtC;gBAAE,QAAQ;YAAI;QAElB;QAEA,qCAAqC;QACrC,MAAM,WAAW,IAAI,kLAAA,CAAA,SAAM,CAAC,SAAS,CAAC,eAAe,CAAC,SAAS;YAC7D,MAAM;YACN,SAAS;QACX;QAEA,kCAAkC;QAClC,MAAM,SAAS,IAAI,kLAAA,CAAA,SAAM,CAAC,MAAM,CAAC,oBAAoB;QAErD,QAAQ,GAAG,CAAC,oBAAoB,OAAO,OAAO;QAE9C,yBAAyB;QACzB,MAAM,WAAW,IAAI,kLAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,kBAAkB,8HAAA,CAAA,iBAAc,EAAE;QACvE,QAAQ,GAAG,CAAC,yBAAyB,SAAS,OAAO;QAErD,iCAAiC;QACjC,MAAM,gBAAgB,kLAAA,CAAA,SAAM,CAAC,KAAK,CAAC,UAAU,CAC3C,KAAK,UAAU,CAAC,QAAQ,OAAO,OAAO,MACtC;QAGF,wBAAwB;QACxB,MAAM,KAAK,MAAM,SAAS,mBAAmB,CAAC;QAC9C,QAAQ,GAAG,CAAC,iBAAiB,GAAG,IAAI;QAEpC,MAAM,UAAU,MAAM,GAAG,IAAI;QAC7B,QAAQ,GAAG,CAAC,oBAAoB,QAAQ,eAAe;QAEvD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,QAAQ,QAAQ,eAAe;YAC/B,aAAa,QAAQ,WAAW;QAClC;IACF,EAAE,OAAO,KAAU;QACjB,QAAQ,KAAK,CAAC,sCAAsC;QACpD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO,KAAK,WAAW;QAAiB,GAC1C;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}