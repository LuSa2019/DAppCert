{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/39340/Desktop/Universita/Tesi/DAppCert/verifica-certificati/src/abi/CertificatiABI.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CertificatiABI = void 0;\nexports.CertificatiABI = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"hash\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"aggiungiCertificato\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"bytes32\",\n                \"name\": \"hash\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"emittente\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"CertificatoAggiunto\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"bytes32\",\n                \"name\": \"hash\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"CertificatoRimosso\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"hash\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"rimuoviCertificato\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"certificati\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"hash\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"emittente\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"timestamp\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"owner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"hash\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"verificaCertificato\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"exists\",\n                \"type\": \"bool\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"emittente\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"timestamp\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }\n];\n"],"names":[],"mappings":"AAAA;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,cAAc,GAAG,KAAK;AAC9B,QAAQ,cAAc,GAAG;IACrB;QACI,UAAU;YACN;gBACI,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACZ;SACH;QACD,QAAQ;QACR,WAAW,EAAE;QACb,mBAAmB;QACnB,QAAQ;IACZ;IACA;QACI,UAAU,EAAE;QACZ,mBAAmB;QACnB,QAAQ;IACZ;IACA;QACI,aAAa;QACb,UAAU;YACN;gBACI,WAAW;gBACX,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACZ;YACA;gBACI,WAAW;gBACX,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACZ;SACH;QACD,QAAQ;QACR,QAAQ;IACZ;IACA;QACI,aAAa;QACb,UAAU;YACN;gBACI,WAAW;gBACX,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACZ;SACH;QACD,QAAQ;QACR,QAAQ;IACZ;IACA;QACI,UAAU;YACN;gBACI,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACZ;SACH;QACD,QAAQ;QACR,WAAW,EAAE;QACb,mBAAmB;QACnB,QAAQ;IACZ;IACA;QACI,UAAU;YACN;gBACI,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACZ;SACH;QACD,QAAQ;QACR,WAAW;YACP;gBACI,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACZ;YACA;gBACI,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACZ;YACA;gBACI,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACZ;SACH;QACD,mBAAmB;QACnB,QAAQ;IACZ;IACA;QACI,UAAU,EAAE;QACZ,QAAQ;QACR,WAAW;YACP;gBACI,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACZ;SACH;QACD,mBAAmB;QACnB,QAAQ;IACZ;IACA;QACI,UAAU;YACN;gBACI,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACZ;SACH;QACD,QAAQ;QACR,WAAW;YACP;gBACI,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACZ;YACA;gBACI,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACZ;YACA;gBACI,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACZ;SACH;QACD,mBAAmB;QACnB,QAAQ;IACZ;CACH","debugId":null}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/39340/Desktop/Universita/Tesi/DAppCert/verifica-certificati/src/lib/aggiungi-certificato.js"],"sourcesContent":["import { ethers } from \"ethers\";\r\nimport { CertificatiABI } from \"../abi/CertificatiABI.js\"; // importa l’array\r\n\r\nconst RPC_URL = \"https://eth-sepolia.g.alchemy.com/v2/DDXreGY5nanD7xm1_HMlVTNXeJGUp2JR\";\r\nconst WALLET_PRIVATE_KEY = \"0xc2a1b0058f1d51f23190447ee5a6c340c00bcf9f4aae74845cf84edfac9ab6ba\";\r\nconst CONTRACT_ADDRESS = \"0x4c323D7a113edC4dfe9d639E0acFa7f47B722ed4\";\r\n\r\nexport async function aggiungiCertificato(hash) {\r\n  const provider = new ethers.providers.JsonRpcProvider(RPC_URL, 11155111);\r\n  const wallet = new ethers.Wallet(WALLET_PRIVATE_KEY, provider);\r\n\r\n  const contract = new ethers.Contract(CONTRACT_ADDRESS, CertificatiABI, wallet);\r\n\r\n  const formattedHash = ethers.utils.hexZeroPad(\r\n    hash.startsWith(\"0x\") ? hash : \"0x\" + hash,\r\n    32\r\n  );\r\n  \r\n  const tx = await contract.aggiungiCertificato(formattedHash);\r\n  return await tx.wait();\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA,8NAA2D,kBAAkB;;;AAE7E,MAAM,UAAU;AAChB,MAAM,qBAAqB;AAC3B,MAAM,mBAAmB;AAElB,eAAe,oBAAoB,IAAI;IAC5C,MAAM,WAAW,IAAI,kLAAA,CAAA,SAAM,CAAC,SAAS,CAAC,eAAe,CAAC,SAAS;IAC/D,MAAM,SAAS,IAAI,kLAAA,CAAA,SAAM,CAAC,MAAM,CAAC,oBAAoB;IAErD,MAAM,WAAW,IAAI,kLAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,kBAAkB,8HAAA,CAAA,iBAAc,EAAE;IAEvE,MAAM,gBAAgB,kLAAA,CAAA,SAAM,CAAC,KAAK,CAAC,UAAU,CAC3C,KAAK,UAAU,CAAC,QAAQ,OAAO,OAAO,MACtC;IAGF,MAAM,KAAK,MAAM,SAAS,mBAAmB,CAAC;IAC9C,OAAO,MAAM,GAAG,IAAI;AACtB","debugId":null}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/39340/Desktop/Universita/Tesi/DAppCert/verifica-certificati/src/app/api/aggiungi-certificato/route.ts"],"sourcesContent":["// app/api/aggiungi-certificato/route.ts\r\nimport { NextResponse } from \"next/server\";\r\n\r\n// Importa la funzione JS\r\nimport { aggiungiCertificato } from \"@/lib/aggiungi-certificato.js\";\r\n\r\nexport async function POST(req: Request) {\r\n  try {\r\n    const { hash } = await req.json();\r\n\r\n    if (!hash || typeof hash !== \"string\") {\r\n      return NextResponse.json(\r\n        { error: \"Hash mancante o non valido\" },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const result = await aggiungiCertificato(hash);\r\n\r\n    return NextResponse.json({\r\n      message: \"Certificato aggiunto con successo\",\r\n      ...result\r\n    });\r\n  } catch (err: any) {\r\n    console.error(\"❌ Errore API aggiungi-certificato:\", err);\r\n    return NextResponse.json(\r\n      { error: err?.message ?? \"Errore interno\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,wCAAwC;;;;AACxC;AAEA,yBAAyB;AACzB;;;AAEO,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,IAAI;QAE/B,IAAI,CAAC,QAAQ,OAAO,SAAS,UAAU;YACrC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA6B,GACtC;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,SAAS,MAAM,CAAA,GAAA,uIAAA,CAAA,sBAAmB,AAAD,EAAE;QAEzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,GAAG,MAAM;QACX;IACF,EAAE,OAAO,KAAU;QACjB,QAAQ,KAAK,CAAC,sCAAsC;QACpD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO,KAAK,WAAW;QAAiB,GAC1C;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}