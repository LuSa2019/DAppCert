{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/39340/Desktop/Universit%C3%A0/Tesi/DAppCert/verifica-certificati/src/app/actions/registerEntity.ts"],"sourcesContent":["'use server';\r\n\r\nimport { supabase } from '@/lib/supabaseClient';\r\n\r\ninterface EntityData {\r\n  nome: string;\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport default async function registerEntity(data: EntityData) {\r\n  const { data: signUpData, error: signUpError } = await supabase.auth.signUp({\r\n    email: data.email,\r\n    password: data.password,\r\n  });\r\n  if (signUpError) throw signUpError;\r\n\r\n  const userId = signUpData.user?.id;\r\n  if (!userId) throw new Error('Registrazione fallita: utente non creato');\r\n\r\n  const { error: insertError } = await supabase\r\n    .from('entities')\r\n    .insert({\r\n      nome: data.nome,\r\n      email: data.email,\r\n    });\r\n\r\n  if (insertError) throw insertError;\r\n\r\n  return signUpData;\r\n}\r\n"],"names":[],"mappings":";;;;;;kQAU8B,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/39340/Desktop/Universit%C3%A0/Tesi/DAppCert/verifica-certificati/src/app/actions/registerStudent.ts"],"sourcesContent":["'use server';\r\n\r\nimport { supabase } from '@/lib/supabaseClient';\r\n\r\ninterface StudentData {\r\n  nome: string;\r\n  cognome: string;\r\n  dataNascita: string;\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport default async function registerStudent(data: StudentData) {\r\n  const { data: signUpData, error: signUpError } = await supabase.auth.signUp({\r\n    email: data.email,\r\n    password: data.password,\r\n  });\r\n  if (signUpError) throw signUpError;\r\n\r\n  const userId = signUpData.user?.id;\r\n  if (!userId) throw new Error('Registrazione fallita: utente non creato');\r\n\r\n  const { error: insertError } = await supabase\r\n    .from('students')\r\n    .insert({\r\n      user_id: userId,\r\n      nome: data.nome,\r\n      cognome: data.cognome,\r\n      data_nascita: data.dataNascita,\r\n      email: data.email,\r\n    });\r\n\r\n  if (insertError) throw insertError;\r\n\r\n  return signUpData;\r\n}\r\n"],"names":[],"mappings":";;;;;;kQAY8B,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/39340/Desktop/Universit%C3%A0/Tesi/DAppCert/verifica-certificati/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from \"react\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport { GraduationCap, Building2, Search } from \"lucide-react\";\nimport registerEntity from \"@/app/actions/registerEntity\";\nimport registerStudent from \"@/app/actions/registerStudent\";\n\nexport default function Home() {\n  const [showRegister, setShowRegister] = useState(false);\n  const [registerAs, setRegisterAs] = useState<'student' | 'entity' | null>(null);\n  const [registerType, setRegisterType] = useState<'classic' | 'wallet' | null>(null);\n\n  // Stati per dati form\n  const [formData, setFormData] = useState<any>({});\n  const [error, setError] = useState<string | null>(null);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError(null);\n\n    try {\n      if (registerAs === 'student') {\n        await registerStudent({\n          nome: formData.nome,\n          cognome: formData.cognome,\n          dataNascita: formData.dataNascita,\n          email: formData.email,\n          password: formData.password,\n        });\n      } else if (registerAs === 'entity') {\n        await registerEntity({\n          nome: formData.nome,\n          email: formData.email,\n          password: formData.password,\n        });\n      }\n      alert(\"Registrazione completata!\");\n      setShowRegister(false);\n      setRegisterType(null);\n      setRegisterAs(null);\n    } catch (e: any) {\n      console.error(e);\n      setError(e.message || \"Errore durante la registrazione\");\n    }\n  };\n\n  return (\n    <main className=\"min-h-screen bg-gradient-to-br from-indigo-900 to-blue-700 text-white flex flex-col\">\n      {/* Header */}\n      <header className=\"p-6 text-center text-5xl md:text-6xl font-extrabold tracking-tight\">\n        CertifyChain\n      </header>\n\n      {/* Hero */}\n      <section className=\"flex flex-col md:flex-row justify-center items-center gap-8 px-6 py-12\">\n        <div className=\"max-w-xl text-center\">\n          <h1 className=\"text-4xl md:text-5xl font-extrabold mb-6 leading-tight drop-shadow-lg\">\n            La tua identità accademica sulla Blockchain\n          </h1>\n          <p className=\"text-lg text-gray-200 mb-4\">\n            Registrazione e verifica dei certificati in modo trasparente e sicuro.\n          </p>\n        </div>\n        <Image\n          src=\"https://www.netgroup.it/wp-content/uploads/2023/04/Blockchain-Technology_2.jpg\"\n          alt=\"Blockchain\"\n          width={600}\n          height={400}\n          className=\"rounded-xl shadow-2xl object-cover\"\n          priority\n        />\n      </section>\n\n      {/* Sezioni */}\n      <section className=\"grid grid-cols-1 md:grid-cols-3 gap-6 px-8 py-12 text-center\">\n        {/* Enti */}\n        <div className=\"bg-white text-gray-900 rounded-2xl p-6 shadow-xl\">\n          <div className=\"flex items-center justify-center gap-2 mb-3 text-indigo-700\">\n            <Building2 size={32} />\n            <h2 className=\"text-3xl font-bold\">Enti</h2>\n          </div>\n          <p className=\"mb-6\">Crea, gestisci e assegna certificati accademici.</p>\n          <div className=\"flex flex-col gap-3\">\n            <button\n              onClick={() => { setShowRegister(true); setRegisterAs('entity'); setRegisterType(null); }}\n              className=\"bg-indigo-700 text-white py-2 px-4 rounded-lg hover:bg-indigo-800\"\n            >\n              Registrati\n            </button>\n            <Link href=\"\" className=\"border border-indigo-700 text-indigo-700 py-2 px-4 rounded-lg hover:bg-indigo-100\">\n              Login\n            </Link>\n          </div>\n        </div>\n\n        {/* Studenti */}\n        <div className=\"bg-white text-gray-900 rounded-2xl p-6 shadow-xl\">\n          <div className=\"flex items-center justify-center gap-2 mb-3 text-indigo-700\">\n            <GraduationCap size={32} />\n            <h2 className=\"text-3xl font-bold\">Studenti</h2>\n          </div>\n          <p className=\"mb-6\">Consulta e gestisci i tuoi certificati accademici.</p>\n          <div className=\"flex flex-col gap-3\">\n            <button\n              onClick={() => { setShowRegister(true); setRegisterAs('student'); setRegisterType(null); }}\n              className=\"bg-indigo-700 text-white py-2 px-4 rounded-lg hover:bg-indigo-800\"\n            >\n              Registrati\n            </button>\n            <Link href=\"\" className=\"border border-indigo-700 text-indigo-700 py-2 px-4 rounded-lg hover:bg-indigo-100\">\n              Login\n            </Link>\n          </div>\n        </div>\n\n        {/* Verifica */}\n        <div className=\"bg-white text-gray-900 rounded-2xl p-6 shadow-xl\">\n          <div className=\"flex items-center justify-center gap-2 mb-3 text-green-600\">\n            <Search size={32} />\n            <h2 className=\"text-3xl font-bold\">Verifica</h2>\n          </div>\n          <p className=\"mb-6\">Inserisci l&apos;ID del certificato per verificarne l&apos;autenticità.</p>\n          <Link href=\"/verify\" className=\"bg-green-600 text-white py-2 px-4 rounded-lg hover:bg-green-700\">\n            Verifica Certificato\n          </Link>\n        </div>\n      </section>\n\n      {/* Modulo di registrazione */}\n      {showRegister && (\n        <section className=\"bg-white text-gray-900 p-6 rounded-xl shadow-xl mx-auto mb-12 w-full max-w-xl\">\n          <h2 className=\"text-2xl font-bold mb-4\">Seleziona tipo di registrazione</h2>\n          {!registerType && (\n            <div className=\"flex flex-col gap-3\">\n              <button onClick={() => setRegisterType('classic')} className=\"bg-indigo-700 text-white py-2 px-4 rounded-lg hover:bg-indigo-800\">\n                Registrati con Email\n              </button>\n              <button onClick={() => setRegisterType('wallet')} className=\"bg-green-600 text-white py-2 px-4 rounded-lg hover:bg-green-700\">\n                Registrati con Wallet\n              </button>\n            </div>\n          )}\n\n          {registerType === 'classic' && (\n            <form onSubmit={handleSubmit} className=\"flex flex-col gap-3 mt-4\">\n              {registerAs === 'student' && (\n                <>\n                  <input name=\"nome\" placeholder=\"Nome\" onChange={handleChange} className=\"border p-2 rounded\" required />\n                  <input name=\"cognome\" placeholder=\"Cognome\" onChange={handleChange} className=\"border p-2 rounded\" required />\n                  <input type=\"date\" name=\"dataNascita\" onChange={handleChange} className=\"border p-2 rounded\" required />\n                </>\n              )}\n              {registerAs === 'entity' && (\n                <input name=\"nome\" placeholder=\"Nome Ente\" onChange={handleChange} className=\"border p-2 rounded\" required />\n              )}\n              <input type=\"email\" name=\"email\" placeholder=\"Email\" onChange={handleChange} className=\"border p-2 rounded\" required />\n              <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={handleChange} className=\"border p-2 rounded\" required />\n              {error && <div className=\"text-red-600 text-sm\">{error}</div>}\n              <button type=\"submit\" className=\"bg-indigo-700 text-white py-2 px-4 rounded-lg hover:bg-indigo-800\">\n                Registrati\n              </button>\n            </form>\n          )}\n\n          {registerType === 'wallet' && (\n            <div className=\"mt-4\">\n              <button onClick={() => console.log('Connetti wallet')} className=\"bg-green-600 text-white py-2 px-4 rounded-lg hover:bg-green-700\">\n                Connetti Wallet\n              </button>\n            </div>\n          )}\n\n          <button onClick={() => { setShowRegister(false); setRegisterType(null); setRegisterAs(null); }} className=\"mt-4 text-sm text-gray-600 underline\">\n            Annulla\n          </button>\n        </section>\n      )}\n\n      {/* Footer */}\n      <footer className=\"text-center py-4 text-sm text-gray-300 border-t border-gray-600\">\n        © 2025 CertifyChain - Tutti i diritti riservati\n      </footer>\n    </main>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}