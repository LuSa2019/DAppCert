{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/39340/Desktop/Universit%C3%A0/Tesi/DAppCert/verifica-certificati/src/lib/supabaseClient.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = 'https://rygyqxalcvxrekpfkqga.supabase.co';  \r\nconst supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ5Z3lxeGFsY3Z4cmVrcGZrcWdhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA0MzM5NjcsImV4cCI6MjA2NjAwOTk2N30.lo2ydzPjibp2nl3W_hnhQNP4od_jprdw4RDVHyXKDJ0';        \r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc;AACpB,MAAM,kBAAkB;AAEjB,MAAM,WAAW,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/39340/Desktop/Universit%C3%A0/Tesi/DAppCert/verifica-certificati/src/app/actions/loginStudent.ts"],"sourcesContent":["'use server';\r\n\r\nimport { supabase } from '@/lib/supabaseClient';\r\nimport bcrypt from 'bcryptjs';\r\n\r\nexport default async function loginEntity({ email, password }: { email: string; password: string }) {\r\n  const { data, error } = await supabase\r\n    .from('users')\r\n    .select('*')\r\n    .eq('email', email)\r\n    .single();\r\n\r\n  if (error || !data) {\r\n    throw new Error('Email non trovata');\r\n  }\r\n\r\n  const passwordMatch = await bcrypt.compare(password, data.password);\r\n  if (!passwordMatch) {\r\n    throw new Error('Password errata');\r\n  }\r\n\r\n  // Autenticazione riuscita: puoi salvare info in sessione o cookies (es: JWT, o NextAuth, o altra strategia)\r\n  return {\r\n    id: data.id,\r\n    nome: data.nome,\r\n    email: data.email\r\n    // altri dati se servono\r\n  };\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;;;;;;AAEe,eAAe,YAAY,EAAE,KAAK,EAAE,QAAQ,EAAuC;IAChG,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,4HAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,SACL,MAAM,CAAC,KACP,EAAE,CAAC,SAAS,OACZ,MAAM;IAET,IAAI,SAAS,CAAC,MAAM;QAClB,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,gBAAgB,MAAM,iIAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU,KAAK,QAAQ;IAClE,IAAI,CAAC,eAAe;QAClB,MAAM,IAAI,MAAM;IAClB;IAEA,4GAA4G;IAC5G,OAAO;QACL,IAAI,KAAK,EAAE;QACX,MAAM,KAAK,IAAI;QACf,OAAO,KAAK,KAAK;IAEnB;AACF;;;IAvB8B;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/39340/Desktop/Universit%C3%A0/Tesi/DAppCert/verifica-certificati/src/app/actions/loginEntity.ts"],"sourcesContent":["'use server';\r\n\r\nimport { supabase } from '@/lib/supabaseClient';\r\nimport bcrypt from 'bcryptjs';\r\n\r\nexport default async function loginEntity({ email, password }: { email: string; password: string }) {\r\n  const { data, error } = await supabase\r\n    .from('entities')\r\n    .select('*')\r\n    .eq('email', email)\r\n    .single();\r\n\r\n  if (error || !data) {\r\n    throw new Error('Email non trovata');\r\n  }\r\n\r\n  const passwordMatch = await bcrypt.compare(password, data.password);\r\n  if (!passwordMatch) {\r\n    throw new Error('Password errata');\r\n  }\r\n\r\n  // Autenticazione riuscita: puoi salvare info in sessione o cookies (es: JWT, o NextAuth, o altra strategia)\r\n  return {\r\n    id: data.id,\r\n    nome: data.nome,\r\n    email: data.email\r\n    // altri dati se servono\r\n  };\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;;;;;;AAEe,eAAe,YAAY,EAAE,KAAK,EAAE,QAAQ,EAAuC;IAChG,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,4HAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,YACL,MAAM,CAAC,KACP,EAAE,CAAC,SAAS,OACZ,MAAM;IAET,IAAI,SAAS,CAAC,MAAM;QAClB,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,gBAAgB,MAAM,iIAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU,KAAK,QAAQ;IAClE,IAAI,CAAC,eAAe;QAClB,MAAM,IAAI,MAAM;IAClB;IAEA,4GAA4G;IAC5G,OAAO;QACL,IAAI,KAAK,EAAE;QACX,MAAM,KAAK,IAAI;QACf,OAAO,KAAK,KAAK;IAEnB;AACF;;;IAvB8B;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 179, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/39340/Desktop/Universit%C3%A0/Tesi/DAppCert/verifica-certificati/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {default as '408a3e51a01555e5fe5cd46ddcb698b6bfccb2d62e'} from 'ACTIONS_MODULE0'\nexport {default as '40e892367fe441cf4ad2d4ca73af010400cb43868d'} from 'ACTIONS_MODULE1'\n"],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 237, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/39340/Desktop/Universit%C3%A0/Tesi/DAppCert/verifica-certificati/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoR,GACjT,kDACA","debugId":null}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/39340/Desktop/Universit%C3%A0/Tesi/DAppCert/verifica-certificati/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,8BACA","debugId":null}},
    {"offset": {"line": 265, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}